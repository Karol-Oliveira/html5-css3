----------HTML5 e CSS3 ------ MODULO 3 --------

Git - GitHub

Repositórios locais e repositórios remotos


-- Criar copias de segurança ou versões anteriores. 

Gerenciador de versões = Git (repositório local) 

lugar para guardar e deixar seu site hospedado = GitHub (repositório remoto)

um depende do outro porem funcionam de forma independente.

-----------------------------------------------------------------------------------------------------------------------

IMAGENS DE FUNDO 

-- Basicamente essas imagens de fundo elas tem uma ideia de composição visual

<title>Teste de Imagem de Fundo</title>

    <style>
        body {
            background-image: url('imagens/wallpaper001.jpg');
        }

        div.quadrado{
            background-color: lightgray;
            border: 1px solid black;
            border-radius: 10px;
            display: inline-block;
            height: 300px;
            width: 300px;
        }

        div#q1 {
            background-color: skyblue;
        }

        div#q2 {
            background-image: linear-gradient(to bottom, yellow, red);
        }

        div#q3 {
            background-image: url('imagens/pattern003.png');
        }
    </style>
</head>
<body>
    <div class="quadrado" id="q1"></div>
    <div class="quadrado" id="q2"></div>
    <div class="quadrado" id="q3"></div>
</body>
</html>



**PERSONALIZANDO A APLICAÇÃO DO BACKGROUD **

Quando o tamanho da caixa é maior que o tamanho da imagem, por padrão, a imagem será repetida nos dois eixos (eixo x e eixo y) quantas vezes for necessário para cobrir a extensão da caixa contêiner.

É possível alterar esse comportamento usando a propriedade background-repeat, que aceita os seguintes valores: 

- repeat;
- no-repeat;
- repeat-x;
- repeat-y;

Note que ao usar o no-repeat, isso não obriga o navegador a aumentar ou diminuir o tamanho da imagem para caber no tamanho da caixa.

<title>Personalização dos fundos</title>
        <style>
            body{

                /*podemos usar imagens externas, sabendo que se um dia essa imagem saia do ar ela dexara de aparecer no site*/

                background-image: url('https://gustavoguanabara.github.io/html-css/imagens/mascote.png');
            
                background-size: 100px 100px;

                background-repeat: no-repeat;

                /* background-size: tamanho da imagem 
                background-repeat: (no-repeat/repeat/repeat-x/repeat-y) todos pelo ponto de partida no canto superior esquerso 
                */
            }
        </style>


--- POSIÇÃO DE REFERÊNCIA ---

background-position:



° left top
° left center
° left bottom
° center center
° right top
° right center
° right bottom


<title>Posição dos fundos</title>
    <style>
        div.bloco{
            height: 200px;
            border: 1px solid black;
            border-radius: 10px;
            margin: 10px;
            background-image: url('imagens/wallpaper002.jpg');
        }

        div#q1 {
            background-position: left top;
        }

        div#q2 {
            background-position: left center;
        }

        div#q3 {
            background-position: right bottom;
        }

        div#q4 {
            background-position: center center;
        }
    </style>
</head>

importante colocar uma cor no fundo.


--- background-size ---

auto == (padrão) a imagem de fundo será aplicada em seu tamanho original.

[length]px
[length]% ==  Redimensiona a largura da imagem e faz a altura se adaptar automaticamente.
Podemos também informar as duas dimensões na sequência ou também usar valores percentuais.
 
cover == Muda o tamanho da imagem para que ela seja sempre totalmente exibida na tela, sem nenhum corte.

contain == Redimensiona a imagem para que ela cubra o contêiner, mesmo que para isso ocorram alguns eventuais cortes.



A propriedade background-attachment aceita os valores:

scroll == (padrão) a imagem de fundo vai rolar junto com o conteúdo.
fixed == A imagem de fundo vai ficar fixada enquanto o conteúdo vai sendo rolado.


/* shorthanr do background 
              -- color 
              -- image 
              -- position
              -- repeat
              -- size 
              -- attachment 
            */

 background: black url('imagens/wallpaper002.jpg') center center no-repeat cover fixed;



<title>Fundo fixo de tela</title>
    <style>
        body{
           /* height: 100vh;
            background-color: black;
            background-image: url('imagens/wallpaper002.jpg');
            background-position: center top;
            background-repeat: no-repeat;
            background-size: cover;
            background-attachment: fixed;*/

            /* shorthand do background 
              -- color 
              -- image 
              -- position
              -- repeat
              --size 
              -- attachment 

              colocar o size separado do shorthand
            */

            background: black url('imagens/wallpaper002.jpg') center center no-repeat fixed;
            background-size: cover;
        }
        main{ 
            background-color: white;
            max-width: 400px;
            padding: 10px;
            margin: auto;
            border: 1px solid darkblue;
            border-radius: 15px;
        }
    </style>
</head>






CENTRALIZAÇÃO VERTICAL E HORIZONTAL 

<title>Alinhamento Vertical</title>
    <style>
        #container {
            height: 96vh;
            padding: 10px;
            background-color: blueviolet;
            position: relative;
            background-image: url('imagens/target001.png');
            background-size: 100% 100%;
        }

        #conteudo{
            background-image: url('imagens/target001.png');
            background-size: 100% 100%;
            height: 200px;
            width: 400px;
            background-color: yellow;
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
        }
    </style>
</head>
<body>
    <section id="container">
        <article id="conteudo">

        </article>
    </section>
</body>
</html>


MINI PROJETO CORDEL EFEITO PARALLAX 

Você já deve ter percebido que quando estamos em movimento (em um carro, ônibus ou trem) e olhamos para a paisagem na janela lateral, aquilo que está mais perto de você parece se mover
muito mais rápido e o que está mais longe tem um deslocamento muito mais lento? Pois isso é o que chamamos de efeito parallax.

Mini projeto --- olhar o mini projeto para saber como faz o efeito parallax 



---------------------------------------------------------------


----> TABELAS <----


NAO PODE USAR TABELA PARA CRIAR A ESTRUTURA DO SITE 


<h1>Minha primeira tabela</h1>
    <!--
        HIERARQUIA DE TABELAS (Simples)
        table = tabela 
            table row (tr) = linha de tabela
                table header (th) = cabeçalho de tabela
                table data (td) = dado de tabela
    -->
    
    <table>
        <tr> <!-- Primeira linha -->
            <td>A1</td>
            <td>B1</td>
            <td>C1</td>
        </tr>
        <tr class="linha"> <!-- Segunda linha -->
            <td>A2</td>
            <td>B2</td>
            <td>C2</td>
        </tr>
        <tr> <!-- Terceira linha -->
            <td>A3</td>
            <td>B3</td>
            <td>C3</td>
        </tr>
        <tr> <!-- Quarta linha -->
            <td>A4</td>
            <td class="dado">B4</td>
            <td>C4</td>
        </tr>
    </table>

se a hierarquia não for obedecida os dados apareceram ou antes ou depois da tabela 


Para retirar os espaços entre as bordas e deixar mais parecido com uma tabela usamos a propriedade no css border-collapse: collapse ( separate é o padrão)

        table {
            width: 400px;
            border-collapse: collapse;
        }
        td{
            border: 1px solid black;
            padding: 8px;
        }


as tags <td> e <tr> não é necessário utilizar a tag de fechamento </td> e </tr> 


ANATOMIA DE TABELAS GRANDES 

<h1>Uso de tabelas grandes.</h1>

    <!--ANATOMIA PARA TABELAS GRANDES 
        Table
	    Caption (legenda da tabela)
            Thead 
                tr, td , th 
            Tbody 
                tr, td, th 
            Tfoot
                tr, td, th 
    -->



ESCOPO 


A tag <th> é usada para definir títulos de colunas ou
linhas, agora é importante saber o que é escopo desse título. 

<table>
        <caption>População das Unidades Federativas</caption>
        <thead>
            <tr>
                <th scope="col">Estado</th>
                <th scope="col">População</th>            
            </tr>
        </thead>

        <tbody>
            <tr>
                <td>São Paulo</td>
                <td class="num">45.973.190</td>
            </tr>
            <tr>
                <td>Minas Gerais</td>
                <td class="num">21.322.692</td>
            </tr>
            <tr>
                <td>Rio de Janeiro</td>
                <td class="num">17.219.679</td>
            </tr>
            <tr>
                <td>Bahia</td>
                <td class="num">14.850.513</td>
            </tr>
            <tr>
                <td>Paraná</td>
                <td class="num">11.824.665</td>
            </tr>
            <tr>
                <td>Rio Grade do Sul</td>
                <td class="num">11.229.915</td>
            </tr>
           </tbody>

        <tfoot>
            <tr>
                <th scope="row">Total de habitantes</th>
                <td class="num"><strong>212.583.720</strong></td>
            </tr>
        </tfoot>
    </table>



EFEITO ZEBRADO NA TABELA 

Para fazer o efeito zebrado usamos a pseudoclasse :nth-child ()
que permite selecionar elementos com base em sua posição entre os filhos do mesmo pai. 
 

elemento:nth-child(n)

elemento: O tipo de elemento (como div, p, li, etc.) que você quer selecionar.

n: Pode ser um número fixo, uma fórmula, ou palavras-chave específicas.

tbody > tr:nth-child(2n) {
            background-color: lightgray;
        }



Palavras-chave
nth-child(even): Seleciona os filhos com índice par (baseado em 1).
nth-child(odd): Seleciona os filhos com índice ímpar.



CABEÇALHO FIXO 

colocar a posição da tabela relativa no css para que possamos no thead usar a seguinte configuração

 thead > tr > th {
            position: sticky;
            top: -1px;
            background-color: #383838;
        }


MESCLAGEM DE CÉLULAS 


<body>
    <h1>Mesclagem de Células</h1>

    <table>
        <tr>
            <td>A</td>
            <td colspan="2">B</td>
            
        </tr>
        <tr>
            <td rowspan="3">D</td>
            <td>E</td>
            <td>F</td>
        </tr>


colspan="2"  Ocupar duas colunas

rowspan="3"  Ocupar três linhas 



AGRUPANDO COLUNAS COM COLGROUP 

Podemos criar um agrupamento de colunas, definindo um
<colgroup> dentro da tabela, logo abaixo da tag <table>: 

 <h1>Exercício de Tabelas</h1>
    <table>
        <colgroup>
            <col class="cnome" span="2">
            <col class="cidade">
            <col class="cprof">
        </colgroup>


Isso vai atribuir uma classe a cada coluna (ou conjunto de colunas, quando usamos span). Ao criar uma configuração de cor para cada uma dessas três classes (c1, c2 e c3), podemos criar um efeito de configuração em grupos de colunas: 

O span no HTML faz com que algumas colunas fizessem parte de um mesmo conjunto de colunas que receberam a mesma formatação de cor. 



TABELA RESPOSIVA 

envelopar toda a tabela dentro de uma div e usando a class aplicar a propriedade:


  #container {
            overflow-x: auto;
        }























